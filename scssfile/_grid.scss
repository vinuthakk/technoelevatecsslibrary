@use "sass:math";
@use "sass:map";

$grid-columns:12;
$grid-gaps:(
    "0":0,
    "1":10px,
    "2":20px,
    "3":30px,
);

$layout-values:flex-start,flex-end,center,space-between,space-around,left,right ;
$align-values:start,end,stretch,baseline,flex-start,flex-end,center;

.ty-container{
    width: 100%;
    max-width:1320px;
    margin:0 auto;
    padding:0 20px;
    box-sizing: border-box;
}
.ty-container-fluid{
    width: 100%;
    padding: 0px 20px;
    
}
.ty-row{
    display: flex;
    flex-flow: row wrap;

}
//grid-gaps
@each $key, $val in $grid-gaps{
    .gap-#{$key} > *{
       padding: $val;
    }
    .gap-#{$key}{
        margin-left: -$val;
        margin-right: -$val;
    }
}

@each $val in $layout-values{
    .ty-justify-#{$val}{
        justify-content: $val;
    }
}

@each $val in $align-values{
    .ty-align-items-#{$val}{
       align-items: $val;
    }
}


@include xs{
    @for $i from 1 through $grid-columns{
        .tycol-#{$i}-xs{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

@include sm{
    @for $i from 1 through $grid-columns{
        .tycol-#{$i}-sm{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}


@include md{
    @for $i from 1 through $grid-columns{
        .tycol-#{$i}-md{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}
@include lg{
    @for $i from 1 through $grid-columns{
        .tycol-#{$i}-lg{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}
@include xl{
    @for $i from 1 through $grid-columns{
        .tycol-#{$i}-xl{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}
@include xxl{
    @for $i from 1 through $grid-columns{
        .tycol-#{$i}-xxl{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}
